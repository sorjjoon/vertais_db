import {MigrationInterface, QueryRunner} from "typeorm";

export class InitialSchema1644237155309 implements MigrationInterface {
    name = 'InitialSchema1644237155309'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "password_reset_token" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "expires" TIMESTAMP NOT NULL, "token" character varying(300) NOT NULL, "ownerId" integer NOT NULL, CONSTRAINT "UQ_6c50e3a3bee2912c1153c63aa64" UNIQUE ("token"), CONSTRAINT "PK_838af121380dfe3a6330e04f5bb" PRIMARY KEY ("id")); COMMENT ON COLUMN "password_reset_token"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "password_reset_token"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "password_reset_token"."id" IS 'Base primary key'; COMMENT ON COLUMN "password_reset_token"."ownerId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "submit" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "description" text, "taskId" integer NOT NULL, "ownerId" integer NOT NULL, CONSTRAINT "UQ_submit_task_id_owner" UNIQUE ("taskId", "ownerId"), CONSTRAINT "PK_ea132eb59089b5e08633785fc92" PRIMARY KEY ("id")); COMMENT ON COLUMN "submit"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "submit"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "submit"."id" IS 'Base primary key'; COMMENT ON COLUMN "submit"."ownerId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "peer_assesment_assignment" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "ownerId" integer NOT NULL, "assignmentId" integer NOT NULL, "optionsPeerassesmentcount" integer NOT NULL DEFAULT '0', "optionsDeadline" TIMESTAMP WITH TIME ZONE NOT NULL, "optionsPairshavebeengenerated" boolean NOT NULL DEFAULT false, "optionsRevealautomatically" boolean NOT NULL DEFAULT false, CONSTRAINT "REL_3df8df1a823030e90393610246" UNIQUE ("assignmentId"), CONSTRAINT "PK_364089e9e2a48285e1216cf49ae" PRIMARY KEY ("id")); COMMENT ON COLUMN "peer_assesment_assignment"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "peer_assesment_assignment"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "peer_assesment_assignment"."id" IS 'Base primary key'; COMMENT ON COLUMN "peer_assesment_assignment"."ownerId" IS 'Base primary key'; COMMENT ON COLUMN "peer_assesment_assignment"."assignmentId" IS 'Base primary key'; COMMENT ON COLUMN "peer_assesment_assignment"."optionsPairshavebeengenerated" IS 'If assessor / asessed pairs have been generated for this peer assesment'; COMMENT ON COLUMN "peer_assesment_assignment"."optionsRevealautomatically" IS 'If peer assesment results should be automatically revealed to the student'`);
        await queryRunner.query(`CREATE TABLE "peer_assesment_pair" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "points" double precision, "description" text, "assessorId" integer NOT NULL, "assessedId" integer NOT NULL, "peerAssesmentAssignmentId" integer NOT NULL, CONSTRAINT "UQ_peer_assement_pair_assignment" UNIQUE ("peerAssesmentAssignmentId", "assessorId", "assessedId"), CONSTRAINT "CHK_assessor_not_equal_to_assessed" CHECK ("assessorId" != "assessedId"), CONSTRAINT "PK_3eca3816b6e7fbd747cfe5212d4" PRIMARY KEY ("id")); COMMENT ON COLUMN "peer_assesment_pair"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "peer_assesment_pair"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "peer_assesment_pair"."id" IS 'Base primary key'; COMMENT ON COLUMN "peer_assesment_pair"."description" IS 'Unsanitzed html'; COMMENT ON COLUMN "peer_assesment_pair"."assessorId" IS 'Base primary key'; COMMENT ON COLUMN "peer_assesment_pair"."assessedId" IS 'Base primary key'; COMMENT ON COLUMN "peer_assesment_pair"."peerAssesmentAssignmentId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "feedback" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "description" text NOT NULL, "childIndex" smallint NOT NULL, "ownerId" integer NOT NULL, "gradeSubmitId" integer, "peerAssesmentId" integer, CONSTRAINT "PK_8389f9e087a57689cd5be8b2b13" PRIMARY KEY ("id")); COMMENT ON COLUMN "feedback"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "feedback"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "feedback"."id" IS 'Base primary key'; COMMENT ON COLUMN "feedback"."description" IS 'plain text content'; COMMENT ON COLUMN "feedback"."ownerId" IS 'Base primary key'; COMMENT ON COLUMN "feedback"."peerAssesmentId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "grade" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "points" double precision, "submitId" integer NOT NULL, "isRevealed" boolean NOT NULL DEFAULT false, "ownerId" integer NOT NULL, CONSTRAINT "REL_e42f3fa7ad270f2129aa2b7ad9" UNIQUE ("submitId"), CONSTRAINT "PK_e42f3fa7ad270f2129aa2b7ad9d" PRIMARY KEY ("submitId")); COMMENT ON COLUMN "grade"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "grade"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "grade"."ownerId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "comment" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "content" text NOT NULL, "reveal" TIMESTAMP WITH TIME ZONE NOT NULL, "ownerId" integer NOT NULL, "courseId" integer, "gradeSubmitId" integer, "peerAssesmentPairId" integer, CONSTRAINT "CHK_f911793a12a75ae0723d3d802b" CHECK (COALESCE("courseId", "gradeSubmitId","peerAssesmentPairId" , -1) >= 1), CONSTRAINT "PK_0b0e4bbc8415ec426f87f3a88e2" PRIMARY KEY ("id")); COMMENT ON COLUMN "comment"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "comment"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "comment"."id" IS 'Base primary key'; COMMENT ON COLUMN "comment"."content" IS 'Unsanitzed html'; COMMENT ON COLUMN "comment"."ownerId" IS 'Base primary key'; COMMENT ON COLUMN "comment"."courseId" IS 'Base primary key'; COMMENT ON COLUMN "comment"."peerAssesmentPairId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "file_blob" ("data" bytea NOT NULL, "detailsId" integer NOT NULL, CONSTRAINT "REL_58ade15b2c9d9d9a9f5a2baff9" UNIQUE ("detailsId"), CONSTRAINT "PK_58ade15b2c9d9d9a9f5a2baff9c" PRIMARY KEY ("detailsId")); COMMENT ON COLUMN "file_blob"."detailsId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "answer" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "description" text, "taskId" integer NOT NULL, CONSTRAINT "UQ_answer_task_id" UNIQUE ("taskId"), CONSTRAINT "PK_9232db17b63fb1e94f97e5c224f" PRIMARY KEY ("id")); COMMENT ON COLUMN "answer"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "answer"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "answer"."id" IS 'Base primary key'; COMMENT ON COLUMN "answer"."description" IS 'Unsanitzed html'; COMMENT ON COLUMN "answer"."taskId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "file_details" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "description" character varying, "filename" character varying NOT NULL, "mimetype" character varying NOT NULL, "ownerId" integer NOT NULL, "commentId" integer, "taskId" integer, "assignmentId" integer, "answerId" integer, "submitId" integer, CONSTRAINT "PK_d36a60145330d35f53600df6eac" PRIMARY KEY ("id")); COMMENT ON COLUMN "file_details"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "file_details"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "file_details"."id" IS 'Base primary key'; COMMENT ON COLUMN "file_details"."ownerId" IS 'Base primary key'; COMMENT ON COLUMN "file_details"."commentId" IS 'Base primary key'; COMMENT ON COLUMN "file_details"."taskId" IS 'Base primary key'; COMMENT ON COLUMN "file_details"."assignmentId" IS 'Base primary key'; COMMENT ON COLUMN "file_details"."answerId" IS 'Base primary key'; COMMENT ON COLUMN "file_details"."submitId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "task" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "description" text, "number" smallint NOT NULL, "points" integer NOT NULL DEFAULT '10', "ownerId" integer NOT NULL, "assignmentId" integer NOT NULL, CONSTRAINT "PK_fb213f79ee45060ba925ecd576e" PRIMARY KEY ("id")); COMMENT ON COLUMN "task"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "task"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "task"."id" IS 'Base primary key'; COMMENT ON COLUMN "task"."ownerId" IS 'Base primary key'; COMMENT ON COLUMN "task"."assignmentId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "assignment" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "description" text, "name" character varying NOT NULL, "ownerId" integer NOT NULL, "courseId" integer NOT NULL, "optionsAllowuploads" boolean NOT NULL DEFAULT false, "optionsHaspeerassesment" boolean NOT NULL DEFAULT false, "optionsReveal" TIMESTAMP WITH TIME ZONE NOT NULL, "optionsDeadline" TIMESTAMP WITH TIME ZONE, CONSTRAINT "PK_43c2f5a3859f54cedafb270f37e" PRIMARY KEY ("id")); COMMENT ON COLUMN "assignment"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "assignment"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "assignment"."id" IS 'Base primary key'; COMMENT ON COLUMN "assignment"."description" IS 'Unsanitzed html'; COMMENT ON COLUMN "assignment"."ownerId" IS 'Base primary key'; COMMENT ON COLUMN "assignment"."courseId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "course_sign_up" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "courseId" integer NOT NULL, "studentId" integer NOT NULL, CONSTRAINT "PK_73398d12e9560a6a7d6bab69450" PRIMARY KEY ("courseId", "studentId")); COMMENT ON COLUMN "course_sign_up"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "course_sign_up"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "course_sign_up"."courseId" IS 'Base primary key'; COMMENT ON COLUMN "course_sign_up"."studentId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "course" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "description" text, "name" character varying NOT NULL, "icon" character varying NOT NULL, "code" character varying NOT NULL, "abbreviation" character varying(6), "ownerId" integer NOT NULL, CONSTRAINT "UQ_5cf4963ae12285cda6432d5a3a4" UNIQUE ("code"), CONSTRAINT "PK_bf95180dd756fd204fb01ce4916" PRIMARY KEY ("id")); COMMENT ON COLUMN "course"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "course"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "course"."id" IS 'Base primary key'; COMMENT ON COLUMN "course"."description" IS 'Plain text content'; COMMENT ON COLUMN "course"."ownerId" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TYPE "account_role_enum" AS ENUM('ADMIN', 'TEACHER', 'STUDENT', 'DUMMY')`);
        await queryRunner.query(`CREATE TABLE "account" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "username" character varying NOT NULL, "password" character varying NOT NULL, "firstName" character varying NOT NULL, "lastName" character varying NOT NULL, "role" "account_role_enum" NOT NULL, "email" character varying, CONSTRAINT "UQ_41dfcb70af895ddf9a53094515b" UNIQUE ("username"), CONSTRAINT "UQ_4c8f96ccf523e9a3faefd5bdd4c" UNIQUE ("email"), CONSTRAINT "PK_54115ee388cdb6d86bb4bf5b2ea" PRIMARY KEY ("id")); COMMENT ON COLUMN "account"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "account"."updatedAt" IS 'Updated at, intialized by db'; COMMENT ON COLUMN "account"."id" IS 'Base primary key'`);
        await queryRunner.query(`CREATE TABLE "session" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "expiredAt" bigint NOT NULL, "id" character varying(255) NOT NULL, "json" text NOT NULL, CONSTRAINT "PK_f55da76ac1c3ac420f444d2ff11" PRIMARY KEY ("id")); COMMENT ON COLUMN "session"."createdAt" IS 'Created at, intialized by db'; COMMENT ON COLUMN "session"."updatedAt" IS 'Updated at, intialized by db'`);
        await queryRunner.query(`CREATE INDEX "IDX_28c5d1d16da7908c97c9bc2f74" ON "session" ("expiredAt") `);
        await queryRunner.query(`ALTER TABLE "password_reset_token" ADD CONSTRAINT "FK_8f5c1f7ae608c00c05f360bcc10" FOREIGN KEY ("ownerId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "submit" ADD CONSTRAINT "FK_720750a32a50d63f9677acbff2c" FOREIGN KEY ("ownerId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "submit" ADD CONSTRAINT "FK_ea476aaa43346118e1ec7bf245c" FOREIGN KEY ("taskId") REFERENCES "task"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "peer_assesment_assignment" ADD CONSTRAINT "FK_e06634a69b5fa0f0f2a95b4a900" FOREIGN KEY ("ownerId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "peer_assesment_assignment" ADD CONSTRAINT "FK_3df8df1a823030e903936102467" FOREIGN KEY ("assignmentId") REFERENCES "assignment"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "peer_assesment_pair" ADD CONSTRAINT "FK_2a59e9e98d4aa0d95992188124e" FOREIGN KEY ("assessorId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "peer_assesment_pair" ADD CONSTRAINT "FK_b8acd23f51430e4b65658a25ee2" FOREIGN KEY ("assessedId") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "peer_assesment_pair" ADD CONSTRAINT "FK_7a6c0d235e070270ddd9daaee7c" FOREIGN KEY ("peerAssesmentAssignmentId") REFERENCES "peer_assesment_assignment"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "feedback" ADD CONSTRAINT "FK_b303a63e926fa293cde24b73fd8" FOREIGN KEY ("ownerId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "feedback" ADD CONSTRAINT "FK_31d643eb84596c828599683ef80" FOREIGN KEY ("gradeSubmitId") REFERENCES "grade"("submitId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "feedback" ADD CONSTRAINT "FK_da1e806b43a6babc05a204b2c9c" FOREIGN KEY ("peerAssesmentId") REFERENCES "peer_assesment_pair"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "grade" ADD CONSTRAINT "FK_a83f185f8e933de8c7124352ba3" FOREIGN KEY ("ownerId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "grade" ADD CONSTRAINT "FK_e42f3fa7ad270f2129aa2b7ad9d" FOREIGN KEY ("submitId") REFERENCES "submit"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "comment" ADD CONSTRAINT "FK_b8804d1590ac402b52f3e945162" FOREIGN KEY ("ownerId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "comment" ADD CONSTRAINT "FK_a96c50a5a085526d834b734ac4f" FOREIGN KEY ("courseId") REFERENCES "course"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "comment" ADD CONSTRAINT "FK_ddc79e65ef0bcb32065851c1899" FOREIGN KEY ("gradeSubmitId") REFERENCES "grade"("submitId") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "comment" ADD CONSTRAINT "FK_dd922aad1add8eb779d5782fb1b" FOREIGN KEY ("peerAssesmentPairId") REFERENCES "peer_assesment_pair"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "file_blob" ADD CONSTRAINT "FK_58ade15b2c9d9d9a9f5a2baff9c" FOREIGN KEY ("detailsId") REFERENCES "file_details"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "answer" ADD CONSTRAINT "FK_79e7326c002eef5d81e11fa65df" FOREIGN KEY ("taskId") REFERENCES "task"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "file_details" ADD CONSTRAINT "FK_e350bf38e7a79951e1e8ec27f3c" FOREIGN KEY ("ownerId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "file_details" ADD CONSTRAINT "FK_b8d409e22f7617a3ab9317aead5" FOREIGN KEY ("commentId") REFERENCES "comment"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "file_details" ADD CONSTRAINT "FK_cf798dd9d81d151f77371c3e180" FOREIGN KEY ("taskId") REFERENCES "task"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "file_details" ADD CONSTRAINT "FK_eccc2cd392b493181a5706d4738" FOREIGN KEY ("assignmentId") REFERENCES "assignment"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "file_details" ADD CONSTRAINT "FK_64b19c89da7068fba71c9e9bc3e" FOREIGN KEY ("answerId") REFERENCES "answer"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "file_details" ADD CONSTRAINT "FK_8189bf6e9bfda3b43891f8ea7ee" FOREIGN KEY ("submitId") REFERENCES "submit"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task" ADD CONSTRAINT "FK_a132ba8200c3abdc271d4a701d8" FOREIGN KEY ("ownerId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task" ADD CONSTRAINT "FK_1ca2b4a7afbaf47b06e2848e099" FOREIGN KEY ("assignmentId") REFERENCES "assignment"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "assignment" ADD CONSTRAINT "FK_f6bebadcbc3a852e4f1adb18e87" FOREIGN KEY ("ownerId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "assignment" ADD CONSTRAINT "FK_5218258c0784c8b47c5079b8198" FOREIGN KEY ("courseId") REFERENCES "course"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "course_sign_up" ADD CONSTRAINT "FK_75439894f3f2bc4086383f56e2a" FOREIGN KEY ("courseId") REFERENCES "course"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "course_sign_up" ADD CONSTRAINT "FK_1ea083ea8572826498bcb87e5f1" FOREIGN KEY ("studentId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "course" ADD CONSTRAINT "FK_ebf0ff6d5d6aeaa87d9b4b29c0c" FOREIGN KEY ("ownerId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "course" DROP CONSTRAINT "FK_ebf0ff6d5d6aeaa87d9b4b29c0c"`);
        await queryRunner.query(`ALTER TABLE "course_sign_up" DROP CONSTRAINT "FK_1ea083ea8572826498bcb87e5f1"`);
        await queryRunner.query(`ALTER TABLE "course_sign_up" DROP CONSTRAINT "FK_75439894f3f2bc4086383f56e2a"`);
        await queryRunner.query(`ALTER TABLE "assignment" DROP CONSTRAINT "FK_5218258c0784c8b47c5079b8198"`);
        await queryRunner.query(`ALTER TABLE "assignment" DROP CONSTRAINT "FK_f6bebadcbc3a852e4f1adb18e87"`);
        await queryRunner.query(`ALTER TABLE "task" DROP CONSTRAINT "FK_1ca2b4a7afbaf47b06e2848e099"`);
        await queryRunner.query(`ALTER TABLE "task" DROP CONSTRAINT "FK_a132ba8200c3abdc271d4a701d8"`);
        await queryRunner.query(`ALTER TABLE "file_details" DROP CONSTRAINT "FK_8189bf6e9bfda3b43891f8ea7ee"`);
        await queryRunner.query(`ALTER TABLE "file_details" DROP CONSTRAINT "FK_64b19c89da7068fba71c9e9bc3e"`);
        await queryRunner.query(`ALTER TABLE "file_details" DROP CONSTRAINT "FK_eccc2cd392b493181a5706d4738"`);
        await queryRunner.query(`ALTER TABLE "file_details" DROP CONSTRAINT "FK_cf798dd9d81d151f77371c3e180"`);
        await queryRunner.query(`ALTER TABLE "file_details" DROP CONSTRAINT "FK_b8d409e22f7617a3ab9317aead5"`);
        await queryRunner.query(`ALTER TABLE "file_details" DROP CONSTRAINT "FK_e350bf38e7a79951e1e8ec27f3c"`);
        await queryRunner.query(`ALTER TABLE "answer" DROP CONSTRAINT "FK_79e7326c002eef5d81e11fa65df"`);
        await queryRunner.query(`ALTER TABLE "file_blob" DROP CONSTRAINT "FK_58ade15b2c9d9d9a9f5a2baff9c"`);
        await queryRunner.query(`ALTER TABLE "comment" DROP CONSTRAINT "FK_dd922aad1add8eb779d5782fb1b"`);
        await queryRunner.query(`ALTER TABLE "comment" DROP CONSTRAINT "FK_ddc79e65ef0bcb32065851c1899"`);
        await queryRunner.query(`ALTER TABLE "comment" DROP CONSTRAINT "FK_a96c50a5a085526d834b734ac4f"`);
        await queryRunner.query(`ALTER TABLE "comment" DROP CONSTRAINT "FK_b8804d1590ac402b52f3e945162"`);
        await queryRunner.query(`ALTER TABLE "grade" DROP CONSTRAINT "FK_e42f3fa7ad270f2129aa2b7ad9d"`);
        await queryRunner.query(`ALTER TABLE "grade" DROP CONSTRAINT "FK_a83f185f8e933de8c7124352ba3"`);
        await queryRunner.query(`ALTER TABLE "feedback" DROP CONSTRAINT "FK_da1e806b43a6babc05a204b2c9c"`);
        await queryRunner.query(`ALTER TABLE "feedback" DROP CONSTRAINT "FK_31d643eb84596c828599683ef80"`);
        await queryRunner.query(`ALTER TABLE "feedback" DROP CONSTRAINT "FK_b303a63e926fa293cde24b73fd8"`);
        await queryRunner.query(`ALTER TABLE "peer_assesment_pair" DROP CONSTRAINT "FK_7a6c0d235e070270ddd9daaee7c"`);
        await queryRunner.query(`ALTER TABLE "peer_assesment_pair" DROP CONSTRAINT "FK_b8acd23f51430e4b65658a25ee2"`);
        await queryRunner.query(`ALTER TABLE "peer_assesment_pair" DROP CONSTRAINT "FK_2a59e9e98d4aa0d95992188124e"`);
        await queryRunner.query(`ALTER TABLE "peer_assesment_assignment" DROP CONSTRAINT "FK_3df8df1a823030e903936102467"`);
        await queryRunner.query(`ALTER TABLE "peer_assesment_assignment" DROP CONSTRAINT "FK_e06634a69b5fa0f0f2a95b4a900"`);
        await queryRunner.query(`ALTER TABLE "submit" DROP CONSTRAINT "FK_ea476aaa43346118e1ec7bf245c"`);
        await queryRunner.query(`ALTER TABLE "submit" DROP CONSTRAINT "FK_720750a32a50d63f9677acbff2c"`);
        await queryRunner.query(`ALTER TABLE "password_reset_token" DROP CONSTRAINT "FK_8f5c1f7ae608c00c05f360bcc10"`);
        await queryRunner.query(`DROP INDEX "IDX_28c5d1d16da7908c97c9bc2f74"`);
        await queryRunner.query(`DROP TABLE "session"`);
        await queryRunner.query(`DROP TABLE "account"`);
        await queryRunner.query(`DROP TYPE "account_role_enum"`);
        await queryRunner.query(`DROP TABLE "course"`);
        await queryRunner.query(`DROP TABLE "course_sign_up"`);
        await queryRunner.query(`DROP TABLE "assignment"`);
        await queryRunner.query(`DROP TABLE "task"`);
        await queryRunner.query(`DROP TABLE "file_details"`);
        await queryRunner.query(`DROP TABLE "answer"`);
        await queryRunner.query(`DROP TABLE "file_blob"`);
        await queryRunner.query(`DROP TABLE "comment"`);
        await queryRunner.query(`DROP TABLE "grade"`);
        await queryRunner.query(`DROP TABLE "feedback"`);
        await queryRunner.query(`DROP TABLE "peer_assesment_pair"`);
        await queryRunner.query(`DROP TABLE "peer_assesment_assignment"`);
        await queryRunner.query(`DROP TABLE "submit"`);
        await queryRunner.query(`DROP TABLE "password_reset_token"`);
    }

}
